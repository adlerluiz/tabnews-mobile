# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - '**.freezed.dart'
    - '**.g.dart'
    - '**/generated_plugin_registrant.dart'
  errors:
    missing_required_param: error
    missing_return: error
  language:
    strict-inference: true
    strict-raw-types: true
  plugins:
    - dart_code_metrics

linter:
  rules:
    always_declare_return_types: true
    always_put_control_body_on_new_line: true
    always_put_required_named_parameters_first: true
    always_require_non_null_named_parameters: true
    always_use_package_imports: true
    annotate_overrides: true
    avoid_bool_literals_in_conditional_expressions: true
    avoid_catching_errors: true
    avoid_double_and_int_checks: true
    avoid_empty_else: true
    avoid_equals_and_hash_code_on_mutable_classes: true
    avoid_escaping_inner_quotes: true
    avoid_field_initializers_in_const_classes: true
    avoid_implementing_value_types: true
    avoid_init_to_null: true
    avoid_null_checks_in_equality_operators: true
    avoid_positional_boolean_parameters: false
    avoid_print: true
    avoid_private_typedef_functions: true
    avoid_redundant_argument_values: true
    avoid_relative_lib_imports: true
    avoid_renaming_method_parameters: true
    avoid_return_types_on_setters: true
    avoid_returning_null: true
    avoid_returning_null_for_future: true
    avoid_returning_null_for_void: true
    avoid_returning_this: true
    avoid_shadowing_type_parameters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    avoid_types_as_parameter_names: true
    avoid_types_on_closure_parameters: false
    avoid_unnecessary_containers: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    avoid_web_libraries_in_flutter: true
    await_only_futures: true
    camel_case_extensions: true
    camel_case_types: true
    cancel_subscriptions: true
    constant_identifier_names: true
    control_flow_in_finally: true
    curly_braces_in_flow_control_structures: true
    directives_ordering: true
    empty_catches: true
    empty_constructor_bodies: true
    empty_statements: true
    file_names: true
    hash_and_equals: true
    implementation_imports: true
    iterable_contains_unrelated_type: true
    join_return_with_assignment: true
    leading_newlines_in_multiline_strings: true
    library_names: true
    library_prefixes: true
    list_remove_unrelated_type: true
    literal_only_boolean_expressions: true
    no_adjacent_strings_in_list: true
    no_default_cases: true
    no_duplicate_case_values: true
    no_logic_in_create_state: true
    no_runtimeType_toString: true
    non_constant_identifier_names: true
    null_closures: true
    omit_local_variable_types: false
    only_throw_errors: true
    overridden_fields: true
    package_api_docs: true
    package_names: true
    package_prefixed_library_names: true
    parameter_assignments: true
    prefer_adjacent_string_concatenation: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    prefer_constructors_over_static_methods: true
    prefer_contains: true
    prefer_equal_for_default_values: true
    prefer_expression_function_bodies: true
    prefer_final_fields: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_foreach: false
    prefer_function_declarations_over_variables: true
    prefer_generic_function_type_aliases: true
    prefer_if_null_operators: true
    prefer_initializing_formals: true
    prefer_inlined_adds: true
    prefer_int_literals: true
    prefer_interpolation_to_compose_strings: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_is_not_operator: true
    prefer_iterable_whereType: true
    prefer_mixin: true
    prefer_null_aware_operators: true
    prefer_single_quotes: true
    prefer_spread_collections: true
    prefer_typing_uninitialized_variables: true
    prefer_void_to_null: true
    recursive_getters: true
    sized_box_for_whitespace: true
    slash_for_doc_comments: true
    sort_child_properties_last: true
    sort_unnamed_constructors_first: true
    test_types_in_equals: true
    throw_in_finally: true
    type_annotate_public_apis: true
    type_init_formals: true
    unawaited_futures: true
    unnecessary_await_in_return: true
    unnecessary_brace_in_string_interps: true
    unnecessary_const: true
    unnecessary_getters_setters: true
    unnecessary_lambdas: true
    unnecessary_new: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_raw_strings: true
    unnecessary_statements: true
    unnecessary_string_escapes: true
    unnecessary_string_interpolations: true
    unnecessary_this: true
    unrelated_type_equality_checks: true
    use_full_hex_values_for_flutter_colors: true
    use_function_type_syntax_for_parameters: true
    use_raw_strings: true
    use_rethrow_when_possible: true
    use_setters_to_change_properties: true
    use_string_buffers: true
    use_to_and_as_if_applicable: true
    valid_regexps: true
    void_checks: true
    deprecated_consistency: true
    use_named_constants: true
    avoid_dynamic_calls: true
    use_build_context_synchronously: true
    avoid_multiple_declarations_per_line: true
    use_test_throws_matchers: true
    noop_primitive_operations: true
    eol_at_end_of_file: true
    unnecessary_constructor_name: true
    use_decorated_box: true
    no_leading_underscores_for_library_prefixes: true
    no_leading_underscores_for_local_identifiers: true
    secure_pubspec_urls: true
    sized_box_shrink_expand: true
    avoid_final_parameters: true
    conditional_uri_does_not_exist: true
    unnecessary_late: true
    use_super_parameters: true
    use_enums: true
    use_colored_box: true

    # Null safety support

    cast_nullable_to_non_nullable: true
    null_check_on_nullable_type_parameter: true
    unnecessary_nullable_for_final_variable_declarations: true
    use_late_for_private_fields_and_variables: true
    use_if_null_to_convert_nulls_to_bools: true

    # The following lints are disabled

    always_specify_types: false
    avoid_annotating_with_dynamic: false
    avoid_as: false
    avoid_catches_without_on_clauses: false
    avoid_classes_with_only_static_members: false
    avoid_function_literals_in_foreach_calls: false
    avoid_js_rounded_ints: false
    avoid_setters_without_getters: false
    cascade_invocations: false
    close_sinks: false
    comment_references: false
    diagnostic_describe_all_properties: false
    do_not_use_environment: false
    exhaustive_cases: false
    flutter_style_todos: false
    invariant_booleans: false
    lines_longer_than_80_chars: false
    missing_whitespace_between_adjacent_strings: false
    one_member_abstracts: false
    prefer_asserts_in_initializer_lists: false
    prefer_asserts_with_message: false
    prefer_double_quotes: false
    prefer_if_elements_to_conditional_expressions: false
    prefer_relative_imports: false
    provide_deprecation_message: false
    public_member_api_docs: false
    sort_constructors_first: false
    sort_pub_dependencies: false
    tighten_type_of_initializing_formals: false
    unnecessary_final: false
    unnecessary_null_checks: false
    unsafe_html: false
    use_is_even_rather_than_modulo: false
    use_key_in_widget_constructors: false
    prefer_null_aware_method_calls: false
    require_trailing_commas: false
    depend_on_referenced_packages: false
    prefer_final_parameters: false

# Dart Code Metrics rules in this list last updated when dart-code-metrics 4.16.0 has been released
#
# New dart-code-metrics rules you can find here: https://github.com/dart-code-checker/dart-code-metrics/releases
dart_code_metrics:
  anti-patterns:
    - long-method # Uses source-lines-of-code metrics
    - long-parameter-list # Uses number-of-parameters metrics

  metrics:
    number-of-parameters: 5
    source-lines-of-code: 250 # Must be 50, it must be fixed

  rules:
    always-remove-listener: true
    avoid-border-all: true
    avoid-collection-methods-with-unrelated-types: true
    avoid-global-state: true
    avoid-missing-enum-constant-in-map: true
    avoid-non-ascii-symbols: true
    avoid-non-null-assertion: false
    avoid-throw-in-catch-block: true
    avoid-unnecessary-setstate: true
    avoid-unnecessary-type-assertions: true
    avoid-unnecessary-type-casts: true
    avoid-unrelated-type-assertions: true
    avoid-unused-parameters: true
    avoid-wrapping-in-padding: true
    double-literal-format: true
    no-equal-then-else: true
    prefer-const-border-radius: true
    prefer-correct-type-name: true
    prefer-first: true
    prefer-immediate-return: true
    prefer-last: true
    prefer-match-file-name: true
    prefer-trailing-comma: true

    member-ordering-extended:
      alphabetize: false
      alphabetize-by-type: false
      order:
        - private-static-fields
        - public-static-fields
        - private-static-getters-setters
        - public-static-getters-setters
        - public-static-methods
        - private-static-methods
        - public-fields
        - private-const-fields
        - private-final-fields
        - private-late-final-fields
        - private-var-fields
        - private-nullable-fields
        - private-getters-setters
        - public-getters-setters
        - named-constructors
        - factory-constructors
        - public-methods
        - private-methods

    # The following lints are disabled

    avoid-dynamic: false
    avoid-ignoring-return-values: false
    avoid-late-keyword: false
    avoid-nested-conditional-expressions: false
    avoid-returning-widgets: false
    binary-expression-operand-order: false
    format-comment: false
    newline-before-return: false
    no-boolean-literal-compare: false
    no-empty-block: false
    no-equal-arguments: false
    no-magic-number: false
    no-object-declaration: false
    prefer-async-await: false
    prefer-commenting-analyzer-ignores: false
    prefer-conditional-expressions: false
    prefer-correct-identifier-length: false
    prefer-extracting-callbacks: false
    prefer-moving-to-variable: false
    prefer-single-widget-per-file: false
